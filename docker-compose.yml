version: '3'

services:
  rabbit:
    image: 'rabbitmq:3.10.7-alpine'
    ports:
      - '5672:5672'
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}

  postgres_db:
    image: "postgres:latest"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data

  flyway:
    image: 'flyway/flyway'
    command: -url=jdbc:postgresql://postgres_db:5432/${POSTGRES_DB} -user=${POSTGRES_USER} -password=${POSTGRES_PASSWORD} -connectRetries=5 migrate
    volumes:
      - ./migrations:/flyway/sql
    depends_on:
      - postgres_db

  consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    image: 'umalmyha/consumer'
    environment:
      - POSTGRES_URL=${POSTGRES_URL}
      - RABBITMQ_CONN_STRING=${RABBITMQ_CONN_STRING}
      - RABBITMQ_EXCHANGE_NAME=${RABBITMQ_EXCHANGE_NAME}
      - RABBITMQ_QUEUE_NAME=${RABBITMQ_QUEUE_NAME}
    depends_on:
      - flyway
      - postgres_db
      - rabbit

  producer:
    build:
      context: .
      dockerfile: Dockerfile.producer
    image: 'umalmyha/producer'
    environment:
      - RABBITMQ_CONN_STRING=${RABBITMQ_CONN_STRING}
      - RABBITMQ_EXCHANGE_NAME=${RABBITMQ_EXCHANGE_NAME}
      - RABBITMQ_QUEUE_NAME=${RABBITMQ_QUEUE_NAME}
    depends_on:
      - consumer
      - rabbit

volumes:
  postgres_data: